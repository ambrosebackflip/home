#!/usr/bin/env python

import sh
import os
import sys
import subprocess

class HelpCommand(object):
    def run(self, args):
        if len(args) > 0:
            for arg in args:
                print("Options for {}:".format(arg))
                print(sh.invoke(["-r", os.path.dirname(os.path.realpath(__file__)), "--complete", "--", arg, "-"]))
        else:
            print(sh.invoke("-r", os.path.dirname(os.path.realpath(__file__)), "--list"))

class InvokeCommand(object):
    def __init__(self, command):
        self._command = command
    def run(self, args):
        iargs = ["invoke", "-r", os.path.dirname(os.path.realpath(__file__)), self._command]
        if args != None:
            subprocess.call(iargs + args)
        else:
            subprocess.callrun(iargs)

commands = {
    "test" : InvokeCommand("test"),
    "env" : InvokeCommand("env"),
    "build" : InvokeCommand("build"),
    "clean" : InvokeCommand("clean"),
    "thrift" : InvokeCommand("thrift"),
    "help" : HelpCommand(),
}

def main(args):
    if len(args) is 1:
        HelpCommand().run(None)
    else:
        cmd = commands.get(args[1])
        if cmd != None:
            cmd.run(args[2:])
        else:
            HelpCommand().run(None)
    
    return 0

if __name__ == "__main__": 
    sys.exit(main(sys.argv))

